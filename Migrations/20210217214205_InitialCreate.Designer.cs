// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using insulin_backend.Database;

namespace insulin_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210217214205_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("PatientTutorial", b =>
                {
                    b.Property<int>("PatientsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TutorialsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PatientsId", "TutorialsId");

                    b.HasIndex("TutorialsId");

                    b.ToTable("PatientTutorial");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StepNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TutorialId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TutorialId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.StepLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Audio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StepId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TutorialLanguageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.HasIndex("TutorialLanguageId");

                    b.ToTable("StepLanguage");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Tutorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tutorials");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.TutorialLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TutorialId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TutorialId");

                    b.ToTable("TutorialLanguages");
                });

            modelBuilder.Entity("PatientTutorial", b =>
                {
                    b.HasOne("insulin_backend.Database.Models.Patient", null)
                        .WithMany()
                        .HasForeignKey("PatientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("insulin_backend.Database.Models.Tutorial", null)
                        .WithMany()
                        .HasForeignKey("TutorialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Doctor", b =>
                {
                    b.HasOne("insulin_backend.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Patient", b =>
                {
                    b.HasOne("insulin_backend.Database.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("insulin_backend.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.Step", b =>
                {
                    b.HasOne("insulin_backend.Database.Models.Tutorial", "Tutorial")
                        .WithMany()
                        .HasForeignKey("TutorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutorial");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.StepLanguage", b =>
                {
                    b.HasOne("insulin_backend.Database.Models.Step", "Step")
                        .WithMany()
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("insulin_backend.Database.Models.TutorialLanguage", "TutorialLanguage")
                        .WithMany()
                        .HasForeignKey("TutorialLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Step");

                    b.Navigation("TutorialLanguage");
                });

            modelBuilder.Entity("insulin_backend.Database.Models.TutorialLanguage", b =>
                {
                    b.HasOne("insulin_backend.Database.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("insulin_backend.Database.Models.Tutorial", "Tutorial")
                        .WithMany()
                        .HasForeignKey("TutorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Tutorial");
                });
#pragma warning restore 612, 618
        }
    }
}
